{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/francisco/Documents/Personal/repo/src/projects/components/filter/Filter.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport FilterCard from './FilterCard';\nimport FilterModal from './FilterModal';\nimport FiltersContext from './FilterContext';\nimport './Filter.css';\nconst filtersMap = {\n  LANGUAGES: new Map([['c-filter', {\n    label: 'C'\n  }], ['c++-filter', {\n    label: 'C++'\n  }], ['java-filter', {\n    label: 'Java'\n  }], ['python-filter', {\n    label: 'Python'\n  }]]),\n  FRAMEWORKS: [{\n    id: 'react-filter',\n    label: 'React'\n  }, {\n    id: 'nodejs-filter',\n    label: 'NodeJS'\n  }, {\n    id: 'net-filter',\n    label: '.NET Remoting'\n  }, {\n    id: 'ros-filter',\n    label: 'ROS'\n  }, {\n    id: 'xamarin-filter',\n    label: 'Xamarin'\n  }, {\n    id: 'vdm++-filter',\n    label: 'VDM++'\n  }],\n  DATES: [{\n    id: '2021-filter',\n    label: '2021'\n  }, {\n    id: '2020-filter',\n    label: '2020'\n  }, {\n    id: '2019-filter',\n    label: '2019'\n  }, {\n    id: '2018-filter',\n    label: '2018'\n  }, {\n    id: '2017-filter',\n    label: '2017'\n  }],\n  TYPES: [{\n    id: 'ml-filter',\n    label: 'Machine Learning'\n  }, {\n    id: 'webapp-filter',\n    label: 'Web App'\n  }, {\n    id: 'mobile-filter',\n    label: 'Mobile'\n  }, {\n    id: 'game-filter',\n    label: 'Game'\n  }]\n};\n\nfunction Filter() {\n  _s();\n\n  const [activeFilters, setActiveFilters] = useState([]);\n  const [modalVisibility, setModalVisibility] = useState(false);\n\n  const updateModalVisibility = () => setModalVisibility(!modalVisibility);\n\n  const handleRemoval = filter => {\n    let arr = activeFilters;\n    arr = arr.filter(item => item.id !== filter.id);\n    setActiveFilters([...arr]);\n  };\n\n  const handleAddition = filter => {\n    let arr = activeFilters;\n    arr.push(filter);\n    setActiveFilters([...arr]);\n  };\n\n  const submit = () => {};\n\n  return /*#__PURE__*/_jsxDEV(FiltersContext.Provider, {\n    value: {\n      activeFilters: activeFilters,\n      removeFilters: handleRemoval,\n      addFilters: handleAddition\n    },\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"filterSection\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Filters:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"filtersHolder\",\n        children: [/*#__PURE__*/_jsxDEV(FilterCard, {\n          type: \"ADD\",\n          id: \"Add\",\n          onNewFilter: updateModalVisibility,\n          onRemoval: handleRemoval\n        }, 'Add', false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), activeFilters.map(filterId => /*#__PURE__*/_jsxDEV(FilterCard, {\n          type: \"FILTER\",\n          id: `${filterId}-card`,\n          onNewFilter: updateModalVisibility,\n          onRemoval: handleRemoval\n        }, `${filterId}-card`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterModal, {\n        filters: filtersMap,\n        visible: modalVisibility,\n        onClose: updateModalVisibility,\n        onSubmit: submit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Filter, \"cljaxGXxAgvKthYx25C6vpHMkl8=\");\n\n_c = Filter;\nexport default Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["/Users/francisco/Documents/Personal/repo/src/projects/components/filter/Filter.jsx"],"names":["React","useState","FilterCard","FilterModal","FiltersContext","filtersMap","LANGUAGES","Map","label","FRAMEWORKS","id","DATES","TYPES","Filter","activeFilters","setActiveFilters","modalVisibility","setModalVisibility","updateModalVisibility","handleRemoval","filter","arr","item","handleAddition","push","submit","removeFilters","addFilters","map","filterId"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport FilterCard from './FilterCard'\nimport FilterModal from './FilterModal'\nimport FiltersContext from './FilterContext';\nimport './Filter.css'\n\nconst filtersMap = {\n  LANGUAGES: new Map([\n    ['c-filter', { label: 'C' }],\n    ['c++-filter', { label: 'C++' }],\n    ['java-filter', { label: 'Java' }],\n    ['python-filter', { label: 'Python' }]\n  ]),\n  FRAMEWORKS: [\n    { id: 'react-filter', label: 'React' },\n    { id: 'nodejs-filter', label: 'NodeJS' },\n    { id: 'net-filter', label: '.NET Remoting' },\n    { id: 'ros-filter', label: 'ROS' },\n    { id: 'xamarin-filter', label: 'Xamarin' },\n    { id: 'vdm++-filter', label: 'VDM++' }\n  ],\n  DATES: [\n    { id: '2021-filter', label: '2021' },\n    { id: '2020-filter', label: '2020' },\n    { id: '2019-filter', label: '2019' },\n    { id: '2018-filter', label: '2018' },\n    { id: '2017-filter', label: '2017' }\n  ],\n  TYPES: [\n    { id: 'ml-filter', label: 'Machine Learning' } ,\n    { id: 'webapp-filter', label: 'Web App' },\n    { id: 'mobile-filter', label: 'Mobile' },\n    { id: 'game-filter', label: 'Game' }\n  ]\n};\n\nfunction Filter() {\n  const [ activeFilters, setActiveFilters ] = useState([])\n  const [ modalVisibility, setModalVisibility ] = useState(false);\n\n  const updateModalVisibility = () => setModalVisibility(!modalVisibility);\n\n  const handleRemoval = (filter) => {\n    let arr = activeFilters;\n    arr = arr.filter(item => item.id !== filter.id)\n    setActiveFilters([...arr]);\n  }\n\n  const handleAddition = (filter) => {\n    let arr = activeFilters;\n    arr.push(filter);\n    setActiveFilters([...arr]);\n  }\n\n  const submit = () => {}\n\n  return (\n    <FiltersContext.Provider \n      value={{ \n        activeFilters: activeFilters,\n        removeFilters: handleRemoval, \n        addFilters: handleAddition\n      }}\n    >\n      <section id='filterSection'>\n        <p>Filters:</p>\n        <div id='filtersHolder'>\n          <FilterCard \n            type='ADD' \n            key='Add' \n            id='Add' \n            onNewFilter={updateModalVisibility} \n            onRemoval={handleRemoval}/>\n          {activeFilters.map(filterId => (\n            <FilterCard \n              type='FILTER' \n              key={`${filterId}-card`} \n              id={`${filterId}-card`} \n              onNewFilter={updateModalVisibility} \n              onRemoval={handleRemoval}\n            />\n          ))}\n        </div>\n        <FilterModal\n          filters={filtersMap}\n          visible={modalVisibility}\n          onClose={updateModalVisibility}\n          onSubmit={submit}\n        />\n      </section>\n    </FiltersContext.Provider>\n  );\n}\n\nexport default Filter;"]},"metadata":{},"sourceType":"module"}