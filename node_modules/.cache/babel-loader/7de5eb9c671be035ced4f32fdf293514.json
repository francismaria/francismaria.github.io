{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/francisco/Documents/Personal/repo/src/projects/components/filter/Filter.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport FilterCard from './FilterCard';\nimport FilterModal from './FilterModal';\nimport ProjectCard from '../card/ProjectCard';\nimport inesctecLogo from '../../../images/companies/inesc-tec_logo.png';\nimport './Filter.css';\nimport { act } from 'react-dom/test-utils';\n\nconst mathex2java = /*#__PURE__*/_jsxDEV(ProjectCard, {\n  name: \"MaTheX2Java\",\n  brief: \"Web-app focused on a free and open-source source-to-source compiler capable of efficiently translating latex mathematic equations to fully operational Java code.\",\n  date: \"2019\",\n  imgSrc: inesctecLogo,\n  alt: \"MaTheX2Java Logo\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 21\n}, this);\n\nconst researchROS = /*#__PURE__*/_jsxDEV(ProjectCard, {\n  name: \"Research Assistant\",\n  brief: \"Study ...\",\n  date: \"July 2019 - December 2019\",\n  imgSrc: inesctecLogo,\n  alt: \"INESC-TEC Logo\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 21\n}, this);\n\nconst projectsMap = new Map([[0, mathex2java], [1, researchROS]]);\nconst filtersInfoMap = {\n  'c-filter': {\n    label: 'C',\n    type: 'lang',\n    projects: []\n  },\n  'c++-filter': {\n    label: 'C++',\n    type: 'lang',\n    projects: []\n  },\n  'java-filter': {\n    label: 'Java',\n    type: 'lang',\n    projects: [0, 1, 2, 3]\n  },\n  'python-filter': {\n    label: 'Python',\n    type: 'lang',\n    projects: []\n  },\n  'react-filter': {\n    label: 'React',\n    type: 'framework',\n    projects: []\n  },\n  'nodejs-filter': {\n    label: 'NodeJS',\n    type: 'framework',\n    projects: [0, 2, 3, 4]\n  },\n  'net-filter': {\n    label: '.NET Remoting',\n    type: 'framework',\n    projects: []\n  },\n  'ros-filter': {\n    label: 'ROS',\n    type: 'framework',\n    projects: []\n  },\n  'xamarin-filter': {\n    label: 'Xamarin',\n    type: 'framework',\n    projects: []\n  },\n  'vdm++-filter': {\n    label: 'VDM++',\n    type: 'framework',\n    projects: []\n  },\n  '2021-filter': {\n    label: '2021',\n    type: 'date',\n    projects: []\n  },\n  '2020-filter': {\n    label: '2020',\n    type: 'date',\n    projects: []\n  },\n  '2019-filter': {\n    label: '2019',\n    type: 'date',\n    projects: []\n  },\n  '2018-filter': {\n    label: '2018',\n    type: 'date',\n    projects: []\n  },\n  '2017-filter': {\n    label: '2017',\n    type: 'date',\n    projects: []\n  },\n  'ml-filter': {\n    label: 'Machine Learning',\n    type: 'type',\n    projects: []\n  },\n  'webapp-filter': {\n    label: 'Web App',\n    type: 'type',\n    projects: []\n  },\n  'mobile-filter': {\n    label: 'Mobile',\n    type: 'type',\n    projects: []\n  },\n  'game-filter': {\n    label: 'Game',\n    type: 'type',\n    projects: []\n  }\n};\nconst filtersTypesMap = {\n  LANGUAGES: ['c-filter', 'c++-filter', 'java-filter', 'python-filter'],\n  FRAMEWORKS: ['react-filter', 'nodejs-filter', 'net-filter', 'ros-filter', 'xamarin-filter', 'vdm++-filter'],\n  DATES: ['2021-filter', '2020-filter', '2019-filter', '2018-filter', '2017-filter'],\n  TYPES: ['ml-filter', 'webapp-filter', 'mobile-filter', 'game-filter']\n};\n\nfunction Filter() {\n  _s();\n\n  const [activeFilters, setActiveFilters] = useState([]);\n  const [filteredProjects, setFilteredProjects] = useState([]);\n  const [modalVisibility, setModalVisibility] = useState(false);\n  const [filteringProcess, setFilteringProcess] = useState(true);\n\n  const updateModalVisibility = () => setModalVisibility(!modalVisibility); // Triggered when activeFilters changes\n\n\n  useEffect(() => {\n    setFilteringProcess(true);\n    let projects = [];\n    projects = activeFilters.map(e => projects.concat(filtersInfoMap[e].projects));\n    setFilteringProcess(false);\n  }, [activeFilters]);\n\n  const updateFilters = filters => {\n    setActiveFilters([...filters]);\n  };\n\n  const handleRemoval = filters => {\n    let arr = activeFilters;\n    setActiveFilters([...arr.filter(id => !filters.includes(id))]);\n  };\n\n  const renderLoadingPanel = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loadingPanel\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Filtering...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n\n  const renderCards = () => /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"cards\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"filterSection\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Filters:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"filtersHolder\",\n        children: [activeFilters.map(filterId => /*#__PURE__*/_jsxDEV(FilterCard, {\n          type: \"FILTER\",\n          id: `${filterId}-card`,\n          label: filtersInfoMap[filterId].label,\n          onNewFilter: updateModalVisibility,\n          onRemoval: handleRemoval\n        }, `${filterId}-card`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(FilterCard, {\n          type: \"ADD\",\n          id: \"Add\",\n          onNewFilter: updateModalVisibility,\n          onRemoval: handleRemoval\n        }, 'Add', false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterModal, {\n        activeFilters: activeFilters,\n        filtersInfo: filtersInfoMap,\n        filtersTypes: filtersTypesMap,\n        visible: modalVisibility,\n        onClose: updateModalVisibility,\n        onSubmit: updateFilters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"projects-contents\",\n      children: filteringProcess ? renderLoadingPanel() : renderCards()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Filter, \"a4ZJUMoJvx3YmNSo4jo86KPG0O4=\");\n\n_c = Filter;\nexport default Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["/Users/francisco/Documents/Personal/repo/src/projects/components/filter/Filter.jsx"],"names":["React","useState","useEffect","FilterCard","FilterModal","ProjectCard","inesctecLogo","act","mathex2java","researchROS","projectsMap","Map","filtersInfoMap","label","type","projects","filtersTypesMap","LANGUAGES","FRAMEWORKS","DATES","TYPES","Filter","activeFilters","setActiveFilters","filteredProjects","setFilteredProjects","modalVisibility","setModalVisibility","filteringProcess","setFilteringProcess","updateModalVisibility","map","e","concat","updateFilters","filters","handleRemoval","arr","filter","id","includes","renderLoadingPanel","renderCards","filterId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FilterCard from './FilterCard'\nimport FilterModal from './FilterModal'\nimport ProjectCard from '../card/ProjectCard'\nimport inesctecLogo from '../../../images/companies/inesc-tec_logo.png'\nimport './Filter.css'\nimport { act } from 'react-dom/test-utils';\n\nconst mathex2java = <ProjectCard \n                      name='MaTheX2Java'\n                      brief='Web-app focused on a free and open-source source-to-source compiler capable of efficiently translating latex mathematic equations to fully operational Java code.'\n                      date='2019'\n                      imgSrc={inesctecLogo}\n                      alt='MaTheX2Java Logo'/>;\n\nconst researchROS = <ProjectCard \n                      name='Research Assistant'\n                      brief='Study ...'\n                      date='July 2019 - December 2019'\n                      imgSrc={inesctecLogo}\n                      alt='INESC-TEC Logo'/>;\n\nconst projectsMap = new Map([\n  [0, mathex2java],\n  [1, researchROS]\n])\n\nconst filtersInfoMap = {\n  'c-filter'      : { label: 'C',                 type: 'lang', projects: [] },\n  'c++-filter'    : { label: 'C++',               type: 'lang', projects: [] },\n  'java-filter'   : { label: 'Java',              type: 'lang', projects: [0,1,2,3] },\n  'python-filter' : { label: 'Python',            type: 'lang', projects: [] },\n  'react-filter'  : { label: 'React',             type: 'framework', projects: [] },\n  'nodejs-filter' : { label: 'NodeJS',            type: 'framework', projects: [0,2,3,4] },\n  'net-filter'    : { label: '.NET Remoting',     type: 'framework', projects: [] },\n  'ros-filter'    : { label: 'ROS',               type: 'framework', projects: [] },\n  'xamarin-filter': { label: 'Xamarin',           type: 'framework', projects: [] },\n  'vdm++-filter'  : { label: 'VDM++',             type: 'framework', projects: [] },\n  '2021-filter'   : { label: '2021',              type: 'date', projects: [] },\n  '2020-filter'   : { label: '2020',              type: 'date', projects: [] },\n  '2019-filter'   : { label: '2019',              type: 'date', projects: [] },\n  '2018-filter'   : { label: '2018',              type: 'date', projects: [] },\n  '2017-filter'   : { label: '2017',              type: 'date', projects: [] },\n  'ml-filter'     : { label: 'Machine Learning',  type: 'type', projects: [] },\n  'webapp-filter' : { label: 'Web App',           type: 'type', projects: [] },\n  'mobile-filter' : { label: 'Mobile',            type: 'type', projects: [] },\n  'game-filter'   : { label: 'Game',              type: 'type', projects: [] }\n}\n\nconst filtersTypesMap = {\n  LANGUAGES : ['c-filter', 'c++-filter', 'java-filter', 'python-filter'],\n  FRAMEWORKS: ['react-filter', 'nodejs-filter', 'net-filter', 'ros-filter', 'xamarin-filter', 'vdm++-filter'],\n  DATES     : ['2021-filter', '2020-filter', '2019-filter', '2018-filter', '2017-filter'],\n  TYPES     : ['ml-filter', 'webapp-filter', 'mobile-filter', 'game-filter']\n};\n\nfunction Filter() {\n  const [ activeFilters, setActiveFilters ] = useState([]);\n  const [ filteredProjects, setFilteredProjects ] = useState([]);\n  const [ modalVisibility, setModalVisibility ] = useState(false);\n  const [ filteringProcess, setFilteringProcess ] = useState(true);\n\n  const updateModalVisibility = () => setModalVisibility(!modalVisibility);\n\n  // Triggered when activeFilters changes\n  useEffect(() => {\n    setFilteringProcess(true);\n\n    let projects = [];\n    projects = activeFilters\n      .map(e => projects.concat(filtersInfoMap[e].projects));\n\n\n\n    setFilteringProcess(false);\n  }, [activeFilters])\n\n  const updateFilters = (filters) => {\n    setActiveFilters([...filters]);\n  };\n\n  const handleRemoval = (filters) => {\n    let arr = activeFilters;\n    setActiveFilters([...arr.filter(id => !filters.includes(id))]);\n  }\n\n  const renderLoadingPanel = () => (\n    <div className='loadingPanel'>\n      <p>Filtering...</p>\n    </div>\n  );\n\n  const renderCards = () => (\n    <p>cards</p>\n  );\n\n  return (\n    <>\n      <section id='filterSection'>\n        <p><strong>Filters:</strong></p>\n        <div id='filtersHolder'>\n          {activeFilters.map(filterId => (\n            <FilterCard \n              type='FILTER' \n              key={`${filterId}-card`} \n              id={`${filterId}-card`}\n              label={filtersInfoMap[filterId].label}\n              onNewFilter={updateModalVisibility} \n              onRemoval={handleRemoval}\n            />\n          ))}\n          <FilterCard \n            type='ADD' \n            key='Add' \n            id='Add' \n            onNewFilter={updateModalVisibility} \n            onRemoval={handleRemoval}\n          />\n        </div>\n        <FilterModal\n          activeFilters={activeFilters}\n          filtersInfo={filtersInfoMap}\n          filtersTypes={filtersTypesMap}\n          visible={modalVisibility}\n          onClose={updateModalVisibility}\n          onSubmit={updateFilters}\n        />\n      </section>\n      <section id='projects-contents'>\n        {filteringProcess ? renderLoadingPanel() : renderCards()}\n      </section>\n    </>\n  );\n}\n\nexport default Filter;"]},"metadata":{},"sourceType":"module"}