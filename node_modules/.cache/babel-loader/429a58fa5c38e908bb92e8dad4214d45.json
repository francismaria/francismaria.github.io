{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/francisco/Documents/Personal/repo/src/projects/components/filter/Filter.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport FilterCard from './FilterCard';\nimport FilterModal from './FilterModal';\nimport './Filter.css';\nconst filtersMap = {\n  LANGUAGES: [{\n    id: 'c-filter',\n    label: 'C'\n  }, {\n    id: 'c++-filter',\n    label: 'C++'\n  }, {\n    id: 'java-filter',\n    label: 'Java'\n  }, {\n    id: 'python-filter',\n    label: 'Python'\n  }],\n  FRAMEWORKS: [{\n    id: 'react-filter',\n    label: 'React'\n  }, {\n    id: 'nodejs-filter',\n    label: 'NodeJS'\n  }, {\n    id: 'net-filter',\n    label: '.NET Remoting'\n  }, {\n    id: 'ros-filter',\n    label: 'ROS'\n  }, {\n    id: 'xamarin-filter',\n    label: 'Xamarin'\n  }, {\n    id: 'vdm++-filter',\n    label: 'VDM++'\n  }],\n  DATES: [{\n    id: '2021-filter',\n    label: '2021'\n  }, {\n    id: '2020-filter',\n    label: '2020'\n  }, {\n    id: '2019-filter',\n    label: '2019'\n  }, {\n    id: '2018-filter',\n    label: '2018'\n  }, {\n    id: '2017-filter',\n    label: '2017'\n  }],\n  TYPES: [{\n    id: 'ml-filter',\n    label: 'Machine Learning'\n  }, {\n    id: 'webapp-filter',\n    label: 'Web App'\n  }, {\n    id: 'mobile-filter',\n    label: 'Mobile'\n  }, {\n    id: 'game-filter',\n    label: 'Game'\n  }]\n};\n\nfunction Filter() {\n  _s();\n\n  const FiltersContext = /*#__PURE__*/React.createContext([]);\n  const [activeFilters, setActiveFilters] = useState([]);\n  const [modalVisibility, setModalVisibility] = useState(false);\n\n  const updateModalVisibility = () => {\n    setModalVisibility(!modalVisibility);\n  };\n\n  const handleRemoval = ids => {\n    console.log(ids); //const updatedFilterCards = filterCards.filter(item => item.props.id !== id);\n    //setFilterCards(updatedFilterCards);\n  };\n\n  const handleAddition = ids => {\n    console.log(ids);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FiltersContext.Provider, {\n    value: {\n      activeFilters: activeFilters,\n      removeFilters: handleRemoval,\n      addFilters: handleAddition\n    },\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"filterSection\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Filters:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"filtersHolder\",\n        children: [/*#__PURE__*/_jsxDEV(FilterCard, {\n          type: \"ADD\",\n          id: \"Add\",\n          onNewFilter: updateModalVisibility,\n          onRemoval: handleRemoval\n        }, 'Add', false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), activeFilters.map(filter => /*#__PURE__*/_jsxDEV(FilterCard, {\n          type: \"FILTER\",\n          id: filter,\n          onNewFilter: updateModalVisibility,\n          onRemoval: handleRemoval\n        }, filter, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterModal, {\n        filters: filtersMap,\n        visible: modalVisibility,\n        onClose: updateModalVisibility,\n        onSubmit: handleAddition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Filter, \"cljaxGXxAgvKthYx25C6vpHMkl8=\");\n\n_c = Filter;\nexport default Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["/Users/francisco/Documents/Personal/repo/src/projects/components/filter/Filter.jsx"],"names":["React","useState","FilterCard","FilterModal","filtersMap","LANGUAGES","id","label","FRAMEWORKS","DATES","TYPES","Filter","FiltersContext","createContext","activeFilters","setActiveFilters","modalVisibility","setModalVisibility","updateModalVisibility","handleRemoval","ids","console","log","handleAddition","removeFilters","addFilters","map","filter"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport FilterCard from './FilterCard'\nimport FilterModal from './FilterModal'\nimport './Filter.css'\n\n\nconst filtersMap = {\n  LANGUAGES: [\n    { id: 'c-filter', label: 'C' },\n    { id: 'c++-filter', label: 'C++' },\n    { id: 'java-filter', label: 'Java' },\n    { id: 'python-filter',label: 'Python' }\n  ],\n  FRAMEWORKS: [\n    { id: 'react-filter', label: 'React' },\n    { id: 'nodejs-filter', label: 'NodeJS' },\n    { id: 'net-filter', label: '.NET Remoting' },\n    { id: 'ros-filter', label: 'ROS' },\n    { id: 'xamarin-filter', label: 'Xamarin' },\n    { id: 'vdm++-filter', label: 'VDM++' }\n  ],\n  DATES: [\n    { id: '2021-filter', label: '2021' },\n    { id: '2020-filter', label: '2020' },\n    { id: '2019-filter', label: '2019' },\n    { id: '2018-filter', label: '2018' },\n    { id: '2017-filter', label: '2017' }\n  ],\n  TYPES: [\n    { id: 'ml-filter', label: 'Machine Learning' } ,\n    { id: 'webapp-filter', label: 'Web App' },\n    { id: 'mobile-filter', label: 'Mobile' },\n    { id: 'game-filter', label: 'Game' }\n  ]\n};\n\nfunction Filter() {\n  const FiltersContext = React.createContext([]);\n  const [ activeFilters, setActiveFilters ] = useState([])\n  const [ modalVisibility, setModalVisibility ] = useState(false);\n\n  const updateModalVisibility = () => {\n    setModalVisibility(!modalVisibility);\n  }\n\n  const handleRemoval = (ids) => {\n    console.log(ids)\n    //const updatedFilterCards = filterCards.filter(item => item.props.id !== id);\n    //setFilterCards(updatedFilterCards);\n  }\n\n  const handleAddition = (ids) => {\n    console.log(ids)\n  }\n\n  return (\n    <FiltersContext.Provider value={{ activeFilters: activeFilters, removeFilters: handleRemoval, addFilters: handleAddition }}>\n      <section id='filterSection'>\n        <p>Filters:</p>\n        <div id='filtersHolder'>\n          <FilterCard type='ADD' key='Add' id='Add' onNewFilter={updateModalVisibility} onRemoval={handleRemoval}/>\n          {activeFilters.map(filter => (\n            <FilterCard type='FILTER' key={filter} id={filter} onNewFilter={updateModalVisibility} onRemoval={handleRemoval}/>\n          ))}\n        </div>\n        <FilterModal\n          filters={filtersMap}\n          visible={modalVisibility}\n          onClose={updateModalVisibility}\n          onSubmit={handleAddition}\n        />\n      </section>\n    </FiltersContext.Provider>\n  );\n}\n\nexport default Filter;"]},"metadata":{},"sourceType":"module"}