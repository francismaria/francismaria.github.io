{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/francisco/Documents/Personal/repo/src/projects/components/filter/FilterModal.jsx\";\nimport { useContext, useState } from 'react';\nimport FiltersContext from './FilterContext';\nimport './FilterModal.css';\n\nfunction FilterModal(props) {\n  const filtersMap = props.filtersInfo;\n  const filtersTypesMap = props.filtersTypes;\n  /*\n  //const context = useContext(FiltersContext);\n  //const [ localFilters, setLocalFilters ] = useState([...context.activeFilters]);\n   const closeModal = () =>  {\n    console.log('close')\n    setLocalFilters(context.activeFilters)\n    props.onClose();\n  }\n   const applyAndClose = () => {\n    context.applyFilters(localFilters);\n    closeModal();\n  }\n   const onClickOutsideModal = (e) => {\n    if(e.target.classList.contains('modalContainer'))\n      closeModal();     \n  }\n   const onCheckboxSelectionChange = (e) => {\n    const selected = e.target.checked;\n    const filterId = e.target.id;\n    let arr = localFilters;\n     if(selected) {\n      arr.push(filterId);\n    } else {\n      arr = arr.filter(id => id !== filterId);\n    }\n     setLocalFilters([...arr]);\n     console.log('selection')\n    console.log(context.activeFilters)\n    console.log(localFilters)\n  }\n  */\n\n  const filterConstruction = id => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checkboxContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"checkboxLabel\",\n      children: filtersMap[id].label\n    }, `${id}-label`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: id,\n      type: \"checkbox\",\n      checked: localFilters.includes(id) ? true : false,\n      onChange: onCheckboxSelectionChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, `${id}-checkbox`, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n\n  const filterGroupConstruction = (groupTitle, filterTypes) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filterSelectionGroup\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: groupTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), filterTypes.map(id => filterConstruction(id))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.visible ? /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"filterModal\",\n      className: \"fullCover\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"modalContainer fullCover\",\n        onClick: e => onClickOutsideModal(e),\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"modalBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modalTitle\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Filter Selection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"closeIcon\",\n              onClick: closeModal,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-times\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modalSelection\",\n            children: [filterGroupConstruction('Languages', filtersTypesMap.LANGUAGES), filterGroupConstruction('Frameworks', filtersTypesMap.FRAMEWORKS), filterGroupConstruction('Types', filtersTypesMap.TYPES), filterGroupConstruction('Dates', filtersTypesMap.DATES)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modalConfirmation\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"modalCancelBtn\",\n              onClick: closeModal,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"modalApplyBtn\",\n              onClick: applyAndClose,\n              children: \"Apply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n}\n\n_c = FilterModal;\nexport default FilterModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterModal\");","map":{"version":3,"sources":["/Users/francisco/Documents/Personal/repo/src/projects/components/filter/FilterModal.jsx"],"names":["useContext","useState","FiltersContext","FilterModal","props","filtersMap","filtersInfo","filtersTypesMap","filtersTypes","filterConstruction","id","label","localFilters","includes","onCheckboxSelectionChange","filterGroupConstruction","groupTitle","filterTypes","map","visible","e","onClickOutsideModal","closeModal","LANGUAGES","FRAMEWORKS","TYPES","DATES","applyAndClose"],"mappings":"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","sourcesContent":["import { useContext, useState } from 'react';\nimport FiltersContext from './FilterContext';\nimport './FilterModal.css'\n\nfunction FilterModal(props) {\n\n  const filtersMap = props.filtersInfo;\n  const filtersTypesMap = props.filtersTypes;\n\n  /*\n  //const context = useContext(FiltersContext);\n  //const [ localFilters, setLocalFilters ] = useState([...context.activeFilters]);\n\n  const closeModal = () =>  {\n    console.log('close')\n    setLocalFilters(context.activeFilters)\n    props.onClose();\n  }\n\n  const applyAndClose = () => {\n    context.applyFilters(localFilters);\n    closeModal();\n  }\n\n  const onClickOutsideModal = (e) => {\n    if(e.target.classList.contains('modalContainer'))\n      closeModal();     \n  }\n\n  const onCheckboxSelectionChange = (e) => {\n    const selected = e.target.checked;\n    const filterId = e.target.id;\n    let arr = localFilters;\n\n    if(selected) {\n      arr.push(filterId);\n    } else {\n      arr = arr.filter(id => id !== filterId);\n    }\n\n    setLocalFilters([...arr]);\n\n    console.log('selection')\n    console.log(context.activeFilters)\n    console.log(localFilters)\n  }\n  */\n  const filterConstruction = (id) => (\n    <div className='checkboxContainer' key={`${id}-checkbox`}>\n      <label className='checkboxLabel' key={`${id}-label`}>{filtersMap[id].label}</label>\n      <input id={id} type='checkbox' checked={localFilters.includes(id) ? true : false} onChange={onCheckboxSelectionChange}/>\n    </div>);\n\n  const filterGroupConstruction = (groupTitle, filterTypes) => (\n    <div className='filterSelectionGroup'>\n      <h5>{groupTitle}</h5>\n      {filterTypes.map(id => filterConstruction(id))}\n    </div>);\n\n  return (\n    <>\n      {props.visible ? \n        <section id='filterModal' className='fullCover'>\n          <section className='modalContainer fullCover' onClick={(e) => onClickOutsideModal(e)}>\n            <section className='modalBox'>\n              <div className='modalTitle'>\n                <h3>Filter Selection</h3>\n                <div className='closeIcon' onClick={closeModal}>\n                  <i className=\"fas fa-times\"></i>\n                </div>\n              </div>\n              <div className='modalSelection'>\n                {filterGroupConstruction('Languages', filtersTypesMap.LANGUAGES)}\n                {filterGroupConstruction('Frameworks', filtersTypesMap.FRAMEWORKS)}\n                {filterGroupConstruction('Types', filtersTypesMap.TYPES)}\n                {filterGroupConstruction('Dates', filtersTypesMap.DATES)}\n              </div>\n              <div className='modalConfirmation'>\n                <button className='modalCancelBtn' onClick={closeModal}>Cancel</button>\n                <button type='submit' className='modalApplyBtn' onClick={applyAndClose}>Apply</button>\n              </div>\n            </section>\n          </section>\n        </section>\n        : null}\n    </>\n  )\n}\n\nexport default FilterModal;"]},"metadata":{},"sourceType":"module"}