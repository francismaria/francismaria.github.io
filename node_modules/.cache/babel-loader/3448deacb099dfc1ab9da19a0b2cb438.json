{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/francisco/Documents/Personal/repo/src/projects/components/filter/Filter.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport FilterCard from './FilterCard';\nimport FilterModal from './FilterModal';\nimport './Filter.css';\nconst languagesFilters = [{\n  id: 'c-filter',\n  label: 'C'\n}, {\n  id: 'c++-filter',\n  label: 'C++'\n}, {\n  id: 'java-filter',\n  label: 'Java'\n}, {\n  id: 'python-filter',\n  label: 'Python'\n}];\nconst frameworksFilters = [{\n  id: 'react-filter',\n  label: 'React'\n}, {\n  id: 'nodejs-filter',\n  label: 'NodeJS'\n}, {\n  id: 'net-filter',\n  label: '.NET Remoting'\n}, {\n  id: 'ros-filter',\n  label: 'ROS'\n}, {\n  id: 'xamarin-filter',\n  label: 'Xamarin'\n}, {\n  id: 'vdm++-filter',\n  label: 'VDM++'\n}];\nconst dateFilters = [{\n  id: '2021-filter',\n  label: '2021'\n}, {\n  id: '2020-filter',\n  label: '2020'\n}, {\n  id: '2019-filter',\n  label: '2019'\n}, {\n  id: '2018-filter',\n  label: '2018'\n}, {\n  id: '2017-filter',\n  label: '2017'\n}];\nconst typeFilters = [{\n  id: 'ml-filter',\n  label: 'Machine Learning'\n}, {\n  id: 'webapp-filter',\n  label: 'Web App'\n}, {\n  id: 'mobile-filter',\n  label: 'Mobile'\n}, {\n  id: 'game-filter',\n  label: 'Game'\n}];\n\nfunction Filter() {\n  _s();\n\n  const FiltersContext = /*#__PURE__*/React.createContext([]);\n  const [activeFilters, setActiveFilters] = useState([]);\n  const [modalVisibility, setModalVisibility] = useState(false);\n\n  const updateModalVisibility = () => {\n    setModalVisibility(!modalVisibility);\n  };\n\n  const handleRemoval = id => {\n    const updatedFilterCards = filterCards.filter(item => item.props.id !== id);\n    setFilterCards(updatedFilterCards);\n  };\n\n  const handleAddition = () => {}; //const newFilterCard = <FilterCard type='FILTER' key={filterId} id={filterId} onNewFilter={updateModalVisibility} onRemoval={handleRemoval}/>\n\n\n  const [filterCards, setFilterCards] = useState([]);\n  return /*#__PURE__*/_jsxDEV(FiltersContext.Provider, {\n    value: {\n      activeFilters: activeFilters,\n      removeFilters: handleRemoval,\n      addFilters: handleAddition\n    },\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"filterSection\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Filters:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"filtersHolder\",\n        children: [/*#__PURE__*/_jsxDEV(FilterCard, {\n          type: \"ADD\",\n          id: \"Add\",\n          onNewFilter: updateModalVisibility,\n          onRemoval: handleRemoval\n        }, 'Add', false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), filterCards]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterModal, {\n        visible: modalVisibility,\n        onSubmit: handleAddition,\n        onClose: handleModalVisibility\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Filter, \"6HHn5YmOqhwGJmBDMGYpBrOHIhc=\");\n\n_c = Filter;\nexport default Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["/Users/francisco/Documents/Personal/repo/src/projects/components/filter/Filter.jsx"],"names":["React","useState","FilterCard","FilterModal","languagesFilters","id","label","frameworksFilters","dateFilters","typeFilters","Filter","FiltersContext","createContext","activeFilters","setActiveFilters","modalVisibility","setModalVisibility","updateModalVisibility","handleRemoval","updatedFilterCards","filterCards","filter","item","props","setFilterCards","handleAddition","removeFilters","addFilters","handleModalVisibility"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport FilterCard from './FilterCard'\nimport FilterModal from './FilterModal'\nimport './Filter.css'\n\nconst languagesFilters = [\n  { id: 'c-filter', label: 'C' },\n  { id: 'c++-filter', label: 'C++' },\n  { id: 'java-filter', label: 'Java' },\n  { id: 'python-filter',label: 'Python' },\n];\n\nconst frameworksFilters = [\n  { id: 'react-filter', label: 'React' },\n  { id: 'nodejs-filter', label: 'NodeJS' },\n  { id: 'net-filter', label: '.NET Remoting' },\n  { id: 'ros-filter', label: 'ROS' },\n  { id: 'xamarin-filter', label: 'Xamarin' },\n  { id: 'vdm++-filter', label: 'VDM++' },\n];\n\nconst dateFilters = [\n  { id: '2021-filter', label: '2021' },\n  { id: '2020-filter', label: '2020' },\n  { id: '2019-filter', label: '2019' },\n  { id: '2018-filter', label: '2018' },\n  { id: '2017-filter', label: '2017' }\n];\n\nconst typeFilters = [\n  { id: 'ml-filter', label: 'Machine Learning' } ,\n  { id: 'webapp-filter', label: 'Web App' },\n  { id: 'mobile-filter', label: 'Mobile' },\n  { id: 'game-filter', label: 'Game' },\n];\n\nfunction Filter() {\n  const FiltersContext = React.createContext([]);\n  const [ activeFilters, setActiveFilters ] = useState([])\n  const [ modalVisibility, setModalVisibility ] = useState(false);\n\n  const updateModalVisibility = () => {\n    setModalVisibility(!modalVisibility);\n  }\n\n  const handleRemoval = (id) => {\n    const updatedFilterCards = filterCards.filter(item => item.props.id !== id);\n    setFilterCards(updatedFilterCards);\n  }\n\n  const handleAddition = () => {\n\n  }\n\n  //const newFilterCard = <FilterCard type='FILTER' key={filterId} id={filterId} onNewFilter={updateModalVisibility} onRemoval={handleRemoval}/>\n\n\n  const [filterCards, setFilterCards] = useState([])\n\n  return (\n    <FiltersContext.Provider value={{activeFilters: activeFilters, removeFilters: handleRemoval, addFilters: handleAddition}}>\n      <section id='filterSection'>\n        <p>Filters:</p>\n        <div id='filtersHolder'>\n          <FilterCard type='ADD' key='Add' id='Add' onNewFilter={updateModalVisibility} onRemoval={handleRemoval}/>\n          {filterCards}\n        </div>\n        <FilterModal visible={modalVisibility} onSubmit={handleAddition} onClose={handleModalVisibility}/>\n      </section>\n    </FiltersContext.Provider>\n  );\n}\n\nexport default Filter;"]},"metadata":{},"sourceType":"module"}